From 552dab6cc457e8d84533341516546702cf990fac Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Sat, 11 Aug 2018 01:32:07 +0000
Subject: [PATCH 5/5] hv_netvsc: defer queue selection to VF

When VF is used
 for accelerated networking it will likely have more queues (and different
 policy) than the synthetic NIC. This patch defers the queue policy to the VF
 so that all the queues can be used. This impacts workloads like local
 generate UDP.

Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 drivers/net/hyperv/netvsc_drv.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index 349cf8e..176cbfa 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -327,8 +327,19 @@ static u16 netvsc_select_queue(struct net_device *ndev, struct sk_buff *skb,
 	nvdev = hv_get_drvdata(dev);
 	vf_netdev = rcu_dereference(nvdev->vf_netdev);
 	if (vf_netdev) {
-		txq = skb_rx_queue_recorded(skb) ? skb_get_rx_queue(skb) : 0;
-		qdisc_skb_cb(skb)->slave_dev_queue_mapping = skb->queue_mapping;
+		const struct net_device_ops *vf_ops = vf_netdev->netdev_ops;
+
+		if (vf_ops->ndo_select_queue)
+			txq = vf_ops->ndo_select_queue(vf_netdev, skb,
+						       accel_priv, fallback);
+		else
+			txq = fallback(vf_netdev, skb);
+
+		/* Record the queue selected by VF so that it can be
+		 * used for common case where VF has more queues than
+		 * the synthetic device.
+		 */
+		qdisc_skb_cb(skb)->slave_dev_queue_mapping = txq;
 	} else {
 		txq = netvsc_pick_tx(ndev, skb);
 	}
-- 
2.1.4

